// CACHE ID 03153d0c-11a0-45f9-8495-1d1a00295d88-no-provenance
import(sys)
import(scheduler)
import(swift)
importStdlib(1)

types(
	xs:schema(
    			xs:simpleType("file", xs:restriction("string"))
    )
)
swift.field.dakota.file.array.int := swift:field("dakota", "file[int]")
swift.field.outdat.file := swift:field("outdat", "file")
swift.field.const.float := swift:field("const", "float")
swift.field.const.string := swift:field("const", "string")
swift.field.templatedir.file.array.int := swift:field("templatedir", "file[int]")
swift.field.const.boolean := swift:field("const", "boolean")
swift.field.swift.mapper.17026.string := swift:field("swift.mapper.17026", "string")
swift.field.swift.mapper.17006.string := swift:field("swift.mapper.17006", "string")
swift.field.swift.mapper.17028.string := swift:field("swift.mapper.17028", "string")
swift.field.swift.mapper.17021.string := swift:field("swift.mapper.17021", "string")
swift.field.swift.mapper.17022.string := swift:field("swift.mapper.17022", "string")
swift.field.surrdat.file := swift:field("surrdat", "file")
swift.field.swift.mapper.17024.string := swift:field("swift.mapper.17024", "string")
swift.field.sout.file := swift:field("sout", "file")
swift.field.swiftconf.file := swift:field("swiftconf", "file")
swift.field.swift.mapper.17009.string := swift:field("swift.mapper.17009", "string")
swift.field.pts.file := swift:field("pts", "file")
swift.field.templatedir_ofa.file.array.int := swift:field("templatedir_ofa", "file[int]")
swift.field.swift.mapper.17030.string := swift:field("swift.mapper.17030", "string")
swift.field.swift.mapper.17014.string := swift:field("swift.mapper.17014", "string")
swift.field.swift.mapper.17016.string := swift:field("swift.mapper.17016", "string")
swift.field.serr.file := swift:field("serr", "file")
swift.field.openfoam.file.array.int := swift:field("openfoam", "file[int]")
swift.field.swift.mapper.17012.string := swift:field("swift.mapper.17012", "string")
swift.field.temp.int := swift:field("temp", "int")
swift.field.swift.mapper.17018.string := swift:field("swift.mapper.17018", "string")
swift.field.swift.mapper.17019.string := swift:field("swift.mapper.17019", "string")
swift.field.const.int := swift:field("const", "int")
swift.string.17001 := swift:new(swift.field.const.string, value="sweepParams.run")
swift.string.17020 := swift:new(swift.field.const.string, value="dakota")
swift.string.17025 := swift:new(swift.field.const.string, value="mapper_ofa.sh")
swift.string.17027 := swift:new(swift.field.const.string, value="logs/surr.out")
swift.string.17023 := swift:new(swift.field.const.string, value="templatedir")
swift.string.17008 := swift:new(swift.field.const.string, value="results/surr.dat")
swift.string.17003 := swift:new(swift.field.const.string, value="templatedir/start_docker_surr.sh")
swift.string.17017 := swift:new(swift.field.const.string, value="openfoam")
swift.string.17010 := swift:new(swift.field.const.string, value="pts")
swift.string.17013 := swift:new(swift.field.const.string, value="swift.conf")
swift.string.17005 := swift:new(swift.field.const.string, value="results/out.dat")
swift.string.17015 := swift:new(swift.field.const.string, value="mapper.sh")
swift.string.17002 := swift:new(swift.field.const.string, value="inputs/elbowKPI.json")
swift.string.17007 := swift:new(swift.field.const.string, value="surr")
swift.string.17004 := swift:new(swift.field.const.string, value="dat")
swift.string.17000 := swift:new(swift.field.const.string, value="dakota/utils/prepInputs_surr.sh")
swift.string.17029 := swift:new(swift.field.const.string, value="logs/surr.err")
swift.string.17011 := swift:new(swift.field.const.string, value="openfoam/inputs/points.dat")
swift.mapper.17006 := 
			swift:new(swift.field.swift.mapper.17006.string)
outdat := 
		swift:new(swift.field.outdat.file, readCount=1, _defline=12, input=true
			swift:mapping("SingleFileMapper", swift:parameter("file", swift.mapper.17006))
		)
swift.mapper.17009 := 
			swift:new(swift.field.swift.mapper.17009.string)
surrdat := 
		swift:new(swift.field.surrdat.file, _defline=13
			swift:mapping("SingleFileMapper", swift:parameter("file", swift.mapper.17009))
		)
swift.mapper.17012 := 
			swift:new(swift.field.swift.mapper.17012.string)
pts := 
		swift:new(swift.field.pts.file, readCount=1, _defline=16, input=true
			swift:mapping("SingleFileMapper", swift:parameter("file", swift.mapper.17012))
		)
swift.mapper.17014 := 
			swift:new(swift.field.swift.mapper.17014.string)
swiftconf := 
		swift:new(swift.field.swiftconf.file, readCount=1, _defline=18, input=true
			swift:mapping("SingleFileMapper", swift:parameter("file", swift.mapper.17014))
		)
swift.mapper.17016 := 
			swift:new(swift.field.swift.mapper.17016.string)
swift.mapper.17018 := 
			swift:new(swift.field.swift.mapper.17018.string)
openfoam := 
		swift:new(swift.field.openfoam.file.array.int, readCount=1, _defline=21, input=true
			swift:mapping("Ext", swift:parameter("exec", swift.mapper.17016)
			swift:parameter("root", swift.mapper.17018))
		)
swift.mapper.17019 := 
			swift:new(swift.field.swift.mapper.17019.string)
swift.mapper.17021 := 
			swift:new(swift.field.swift.mapper.17021.string)
dakota := 
		swift:new(swift.field.dakota.file.array.int, readCount=1, _defline=22, input=true
			swift:mapping("Ext", swift:parameter("exec", swift.mapper.17019)
			swift:parameter("root", swift.mapper.17021))
		)
swift.mapper.17022 := 
			swift:new(swift.field.swift.mapper.17022.string)
swift.mapper.17024 := 
			swift:new(swift.field.swift.mapper.17024.string)
swift.mapper.17026 := 
			swift:new(swift.field.swift.mapper.17026.string)
swift.mapper.17028 := 
			swift:new(swift.field.swift.mapper.17028.string)
sout := 
		swift:new(swift.field.sout.file, _defline=42
			swift:mapping("SingleFileMapper", swift:parameter("file", swift.mapper.17028))
		)
swift.mapper.17030 := 
			swift:new(swift.field.swift.mapper.17030.string)
serr := 
		swift:new(swift.field.serr.file, _defline=43
			swift:mapping("SingleFileMapper", swift:parameter("file", swift.mapper.17030))
		)

prepInputs := function(sout, serr, surrdat, openfoam, dakota, outdat, pts, swiftconf) {
	swift:unitStart("PROCEDURE", name="prepInputs", line=30, outputs="sout,serr,surrdat")
	swift:waitFor(openfoam, dakota, outdat, pts, swiftconf)
	k:tailcall(
		swift:execute(
			"prepInputs",
				swift:stageIn(openfoam, dakota, outdat, pts, swiftconf)
				swift:stageOut(sout, serr, surrdat)
	  		swift:commands(
	  				swift:command("bash", null, null, null, swift.string.17000, swift.string.17001, swift.string.17002)
	  				swift:command("bash", null, swiftscript:filename(#_line=32
	  				sout
	  			), swiftscript:filename(#_line=32
	  				serr
	  			), swift.string.17003)
	  		)
		)
	)
	swift:unitEnd("PROCEDURE", name="prepInputs", line=30)}

restartLog(name = k:concat(contextAttribute("SWIFT:SCRIPT_NAME"), "-", contextAttribute("SWIFT:RUN_ID"))) {
	swift:mains(
		swift:startProgressTicker()
		uparallel(
			swift:setFieldValue(
				k:getAndDelete(swift.mapper.17006)
				swiftscript:arg$string$string$(#_line=12
					swift.string.17004, swift.string.17005
				)
			)
			swift:setFieldValue(
				k:getAndDelete(swift.mapper.17009)
				swiftscript:arg$string$string$(#_line=13
					swift.string.17007, swift.string.17008
				)
			)
			swift:setFieldValue(
				k:getAndDelete(swift.mapper.17012)
				swiftscript:arg$string$string$(#_line=16
					swift.string.17010, swift.string.17011
				)
			)
			swift:setFieldValue(
				k:getAndDelete(swift.mapper.17014)
				swift.string.17013
			)
			swift:setFieldValue(
				k:getAndDelete(swift.mapper.17016)
				swift.string.17015
			)
			swift:setFieldValue(
				k:getAndDelete(swift.mapper.17018)
				swift.string.17017
			)
			swift:setFieldValue(
				k:getAndDelete(swift.mapper.17019)
				swift.string.17015
			)
			swift:setFieldValue(
				k:getAndDelete(swift.mapper.17021)
				swift.string.17020
			)
			swift:setFieldValue(
				k:getAndDelete(swift.mapper.17022)
				swift.string.17015
			)
			swift:setFieldValue(
				k:getAndDelete(swift.mapper.17024)
				swift.string.17023
			)
			swift:setFieldValue(
				k:getAndDelete(swift.mapper.17026)
				swift.string.17025
			)
			swift:setFieldValue(
				k:getAndDelete(swift.mapper.17028)
				swift.string.17027
			)
			swift:setFieldValue(
				k:getAndDelete(swift.mapper.17030)
				swift.string.17029
			)
			prepInputs(#_line=44
				k:getAndDelete(sout), k:getAndDelete(serr), k:getAndDelete(surrdat)
				swift:readVar(openfoam), swift:readVar(dakota), swift:readVar(outdat), swift:readVar(pts), swift:readVar(swiftconf)
			)
		)
		swift:stopProgressTicker()
	)
}

swift:cleanDataset(swiftconf)
swift:cleanDataset(dakota)
swift:cleanDataset(serr)
swift:cleanDataset(outdat)
swift:cleanDataset(surrdat)
swift:cleanDataset(openfoam)
swift:cleanDataset(pts)
swift:cleanDataset(sout)
swift:cleanDataset(shutdown=true)